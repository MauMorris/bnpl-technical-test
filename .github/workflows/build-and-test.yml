# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Java CI with Maven

# Define cuándo se debe ejecutar este workflow
on:
  # Se ejecuta cada push a cualquier rama
  push:
  # Se ejecuta cada Pull Request a cualquier rama
  pull_request:

# Define los jobs que se ejecutarán
jobs:
  build:
    # El tipo de máquina virtual que se usará para ejecutar el trabajo
    runs-on: ubuntu-latest
    # Permisos necesarios para que el job pueda escribir en el registro de paquetes de GitHub
    permissions:
      contents: read
      packages: write

    # Los pasos que componen el trabajo
    steps:
    # 1. Clona tu repositorio en la máquina virtual
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Configura el JDK 17, que es el que tu proyecto necesita
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        # Habilita el cache de dependencias de Maven para acelerar futuras ejecuciones
        cache: maven

    # 3. Ejecuta el comando de Maven para compilar y probar
    #    Usa el Maven Wrapper (mvnw) que ya tienes en tu proyecto
    - name: Build and test with Maven
      run: ./mvnw -B package --file pom.xml

    # (Opcional pero recomendado) Sube el reporte de cobertura de Jacoco
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/

    # --- Etapa de Publicación de Imagen Docker (Solo en la rama main) ---

    - name: Extract Docker metadata
      # Este paso solo se ejecuta si el evento es un 'push' a la rama 'main'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Log in to GitHub Container Registry
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}